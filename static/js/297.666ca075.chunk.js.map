{"version":3,"file":"static/js/297.666ca075.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormButton\":\"ContactForm_contactFormButton__gvoPv\",\"inputForm\":\"ContactForm_inputForm__4bzZs\",\"contactFormLabel\":\"ContactForm_contactFormLabel__16ABo\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterText\":\"Filter_filterText__QGy-k\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { filterStorageContacts } from '../../redux/filterSlice';\nimport css from './Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const handleChange = event => {\n    dispatch(filterStorageContacts(event.target.value.trim()));\n  };\n\n  return (\n    <>\n      <p className={css.filterText}>Find contacts by name</p>\n      <input\n        name=\"filter\"\n        type=\"text\"\n        onChange={handleChange}\n        className={css.filterInput}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListTitle\":\"ContactList_contactListTitle__-6FRG\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListFilterError\":\"ContactList_contactListFilterError__JbWyy\",\"contactListButton\":\"ContactList_contactListButton__3Tc2d\",\"contactListLoading\":\"ContactList_contactListLoading__S+Q5T\"};","import { Filter } from '../Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsThunk } from '../../redux/operations';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectStatusFilter,\n} from 'redux/selectors';\nimport { deleteContactThunk } from '../../redux/operations';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectStatusFilter);\n  const contactTheFilter = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter);\n  });\n  const renderList = filter === '' ? contacts : contactTheFilter;\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <h2 className={css.contactListTitle}>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <b className={css.contactListLoading}>Request in progress...</b>\n      )}\n      {renderList.length === 0 && filter !== '' ? (\n        <div className={css.contactListFilterError}>\n          Oops! Nothing found, change the search value.\n        </div>\n      ) : (\n        <ul className={css.contactList}>\n          {renderList.map(e => {\n            return (\n              <li className={css.contactListItem} key={e.id}>\n                {e.name}: {e.number}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(deleteContactThunk(e.id));\n                  }}\n                  className={css.contactListButton}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default ContactList;\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from '../../redux/operations';\nimport { useState } from 'react';\nimport ContactList from '../ContactList';\nimport { Children } from 'react';\nimport { selectIsLoggedIn } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n\n    const maxId = Math.max(...contacts.map(e => e.id));\n\n    setId(maxId + 1);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name !== '') {\n      const checkName = contacts.find(contact => {\n        return contact.name === name;\n      });\n\n      checkName === undefined\n        ? dispatch(addContactThunk({ name: name, number: number, id: id }))\n        : alert([name] + ': is already in contacts');\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <>\n          <form onSubmit={handleSubmit} className={css.contactForm}>\n            <label htmlFor=\"name\" className={css.contactFormLabel}>\n              Name\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}\n                className={css.inputForm}\n                autoComplete=\"true\"\n              />\n            </label>\n            <label htmlFor=\"number\" className={css.contactFormLabel}>\n              Number\n              <input\n                id=\"number\"\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}\n                className={css.inputForm}\n              />\n            </label>\n            <button className={css.contactFormButton} type=\"submit\">\n              Add contact\n            </button>\n          </form>\n          <ContactList>({Children})</ContactList>\n        </>\n      ) : (\n        <Navigate to=\"/login\" />\n      )}\n    </>\n  );\n}\n"],"names":["Filter","dispatch","useDispatch","className","css","name","type","onChange","event","filterStorageContacts","target","value","trim","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","filter","selectStatusFilter","contactTheFilter","contact","toLowerCase","includes","renderList","useEffect","fetchContactsThunk","length","map","e","number","onClick","deleteContactThunk","id","ContactForm","state","items","useState","setId","setName","setNumber","isLoggedIn","selectIsLoggedIn","handleChange","maxId","Math","max","reset","onSubmit","preventDefault","undefined","find","addContactThunk","alert","htmlFor","pattern","title","required","autoComplete","Children","to"],"sourceRoot":""}