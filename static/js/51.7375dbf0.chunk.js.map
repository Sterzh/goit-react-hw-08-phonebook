{"version":3,"file":"static/js/51.7375dbf0.chunk.js","mappings":"iMACA,EAA8B,kCAA9B,EAAoF,wCAApF,EAAwI,gCAAxI,EAA2L,uC,sCCwF3L,EApFqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GAKxB,EAYD,OACE,kBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACF,KAATd,GACFH,GAASkB,EAAAA,EAAAA,IAAkB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAG5CS,EAAKG,OACN,EAG+BC,UAAWC,EAAzC,WACE,mBAAOC,QAAQ,OAAOF,UAAWC,EAAjC,UAAuD,YAErD,kBACEE,GAAG,OACHC,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRf,MAAOT,EACPyB,SAAUnB,EACVW,UAAWC,EACXQ,aAAa,aAGjB,mBAAOP,QAAQ,QAAQF,UAAWC,EAAlC,UAAwD,SAEtD,kBACEE,GAAG,QACHC,KAAK,QACLrB,KAAK,QACLsB,QAAQ,0CACRC,MAAM,wBACNC,UAAQ,EACRf,MAAOP,EACPuB,SAAUnB,EACVW,UAAWC,QAGf,mBAAOC,QAAQ,WAAWF,UAAWC,EAArC,UAA2D,YAEzD,kBACEE,GAAG,WACHC,KAAK,WACLrB,KAAK,WACLsB,QAAQ,uCACRC,MAAM,6GACNC,UAAQ,EACRf,MAAOL,EACPqB,SAAUnB,EACVW,UAAWC,QAGf,mBAAQD,UAAWC,EAAuBG,KAAK,SAA/C,SAAwD,cAK7D,ECrFc,SAASM,IACtB,OAAO,SAAC,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","Pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"RegisterForm_contactForm__SL4S4\",\"contactFormButton\":\"RegisterForm_contactFormButton__eE+sS\",\"inputForm\":\"RegisterForm_inputForm__4ergc\",\"contactFormLabel\":\"RegisterForm_contactFormLabel__tP11N\"};","import css from './RegisterForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { registerUserThunk } from '../../redux/operations';\nimport { useState } from 'react';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (name !== '') {\n      dispatch(registerUserThunk({ name, email, password }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <label htmlFor=\"name\" className={css.contactFormLabel}>\n        UserName\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={css.inputForm}\n          autoComplete=\"true\"\n        />\n      </label>\n      <label htmlFor=\"email\" className={css.contactFormLabel}>\n        Email\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          title=\"Invalid email address\"\n          required\n          value={email}\n          onChange={handleChange}\n          className={css.inputForm}\n        />\n      </label>\n      <label htmlFor=\"password\" className={css.contactFormLabel}>\n        Password\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n          title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n          required\n          value={password}\n          onChange={handleChange}\n          className={css.inputForm}\n        />\n      </label>\n      <button className={css.contactFormButton} type=\"submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n}\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","onSubmit","e","preventDefault","form","currentTarget","registerUserThunk","reset","className","css","htmlFor","id","type","pattern","title","required","onChange","autoComplete","Register"],"sourceRoot":""}