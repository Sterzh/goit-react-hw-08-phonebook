{"version":3,"file":"static/js/484.4ad3001b.chunk.js","mappings":"kMACA,EAA8B,2BAA9B,EAA6E,iCAA7E,EAA0H,yBAA1H,EAAsK,gC,0DCkEtK,EA5Dc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACL,UAATD,EAAmBT,EAASU,GAASR,EAAYQ,EAClD,EASD,OACE,8BACGP,GACC,SAAC,KAAD,CAAUQ,GAAG,eAEb,kBAAMC,SAZS,SAAAC,GACnBA,EAAEC,iBACFlB,GAASmB,EAAAA,EAAAA,IAAe,CAAEhB,MAAAA,EAAOE,SAAAA,KACjCD,EAAS,IACTE,EAAY,GACb,EAOmCc,UAAWC,EAAzC,WACE,mBAAOC,QAAQ,QAAQF,UAAWC,EAAlC,UAAwD,SAEtD,kBACEE,GAAG,QACHC,KAAK,QACLX,KAAK,QACLY,QAAQ,0CACRC,UAAQ,EACRZ,MAAOX,EACPwB,SAAUjB,EACVU,UAAWC,QAGf,mBAAOC,QAAQ,WAAWF,UAAWC,EAArC,UAA2D,YAEzD,kBACEE,GAAG,WACHC,KAAK,WACLX,KAAK,WACLY,QAAQ,uCACRG,MAAM,6GACNF,UAAQ,EACRZ,MAAOT,EACPsB,SAAUjB,EACVU,UAAWC,QAGf,mBAAQD,UAAWC,EAAuBG,KAAK,SAA/C,SAAwD,gBAOjE,C","sources":["webpack://react-homework-template/./src/components/pages/Login/Login.module.css?79c7","components/pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"Login_contactForm__iKWMt\",\"contactFormButton\":\"Login_contactFormButton__kCKC4\",\"inputForm\":\"Login_inputForm__nX+9h\",\"contactFormLabel\":\"Login_contactFormLabel__AoIPw\"};","import css from './Login.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logInUserThunk } from '../../../redux/operations';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/selectors';\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'email' ? setEmail(value) : setPassword(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logInUserThunk({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <Navigate to=\"/contacts\" />\n      ) : (\n        <form onSubmit={handleSubmit} className={css.contactForm}>\n          <label htmlFor=\"email\" className={css.contactFormLabel}>\n            Email\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n              required\n              value={email}\n              onChange={handleChange}\n              className={css.inputForm}\n            />\n          </label>\n          <label htmlFor=\"password\" className={css.contactFormLabel}>\n            Password\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n              title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n              required\n              value={password}\n              onChange={handleChange}\n              className={css.inputForm}\n            />\n          </label>\n          <button className={css.contactFormButton} type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default LogIn;\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","isLoggedIn","useSelector","selectIsLoggedIn","handleChange","event","target","name","value","to","onSubmit","e","preventDefault","logInUserThunk","className","css","htmlFor","id","type","pattern","required","onChange","title"],"sourceRoot":""}